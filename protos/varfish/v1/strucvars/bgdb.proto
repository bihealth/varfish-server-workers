syntax = "proto3";

package varfish.v1.strucvars.bgdb;

// Enumeration for storing SV types from the caller.
enum SvType {
  // Unspecified.
  SV_TYPE_UNSPECIFIED = 0;
  // Deletions.
  SV_TYPE_DEL = 1;
  // Duplications.
  SV_TYPE_DUP = 2;
  // Inversions.
  SV_TYPE_INV = 3;
  // Insertion.
  SV_TYPE_INS = 4;
  // Break-end.
  SV_TYPE_BND = 5;
  // Copy number variation.
  SV_TYPE_CNV = 6;
}

// Background database record.
message BgDbRecord {
  // Numeric chromosome number of start position.
  int32 chrom_no = 1;
  // Numeric chromosome number of end position.
  int32 chrom_no2 = 2;
  // Structural variation type.
  SvType sv_type = 3;
  // 1-based start position.
  int32 start = 4;
  // 1-based stop position.
  int32 stop = 5;
  // Number of matching entries.
  uint32 count = 6;
}

// Record for the background database.
message BackgroundDatabase {
  // List of background database records.
  repeated BgDbRecord records = 1;
}

// Entry in a masked region database.
message MaskedDbRecord {
  // Numeric chromosome number.
  int32 chrom_no = 1;
  // 1-based start position.
  int32 start = 2;
  // 1-based stop position.
  int32 stop = 3;
}

// Database of masked regions.
message MaskedDatabase {
  // List of masked regions.
  repeated MaskedDbRecord records = 1;
}

// Record for the gene cross-link database.
message XlinkRecord {
  // HGNC ID (e.g., "HGNC:123")
  string hgnc_id = 1;
  // Gene symbol.
  string symbol = 2;
  // Entrez gene ID.
  uint32 entrez_id = 3;
  // Ensembl gene ID.
  uint32 ensembl_id = 4;
}

// Gene cross-link database.
message XlinkDatabase {
  // List of cross-link records.
  repeated XlinkRecord records = 1;
}
